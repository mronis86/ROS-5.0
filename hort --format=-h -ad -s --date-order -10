a04c393 2025-10-21 \ Add START cue designation and show start overtime tracking\n\nNEW FEATURES - SHOW START TIME TRACKING:\n\n1. START CUE MARKER:\n   - Added star button (/) before CUE label in CUE column\n   - Click to mark/unmark cue as SHOW START\n   - Only one START cue at a time (gold highlight when marked)\n   - Saves to settings object (startCueId) and persists to database\n   - Loads on page refresh\n\n2. SHOW START OVERTIME CALCULATION:\n   - When START cue timer begins, compares actual vs scheduled start time\n   - Uses START cue's 'Start' column time (e.g., 1:00 PM)\n   - Calculates: actualStartTime - scheduledStartTime = showStartOvertime\n   - Example: Started at 1:04 PM vs scheduled 1:00 PM = +4m late\n   - Stored in showStartOvertime state\n\n3. DUAL OVERTIME TOAST:\n   - Line 1: Cue-specific overtime (CUE 4: +2m over)\n   - Line 2: Show cumulative overtime (SHOW: +4m late)\n   - Color based on show start overtime (yellow=early, red=late, green=on-time)\n   - Only shows when timer is running\n   - Removed old date/time comparison logic\n\n4. TIME PARSING:\n   - Added parseTimeString() helper function\n   - Parses 'Start' column times (1:00 PM, 13:00, etc.)\n   - Handles AM/PM and 24-hour formats\n\nUSE CASE:\n- Mark CUE 4 (first real content) as START\n- Preshow cues before it use duration-based overtime\n- START cue tracks if show started late/early vs scheduled time\n- All subsequent cues show individual overtime + cumulative show delay"
da2011d 2025-10-20 \ Update electron-osc-app.zip (without node_modules) - Auto-refresh + Overtime\n\nFINAL ELECTRON APP ZIP:\n- Includes auto-refresh feature (checkbox + interval selector)\n- Includes overtime WebSocket handlers\n- Excludes node_modules (users run install-dependencies.bat)\n- File size under GitHub limit\n\nUsers download this ZIP from Netlify and get:\n Auto-refresh: 30s/60s/120s intervals\n Overtime sync from web UI changes\n Real-time schedule updates\n Past/Upcoming event filters\n\nReady for Netlify deployment."
eafe61e 2025-10-20 \ Add auto-refresh feature to Electron app\n\nNEW FEATURE - AUTO-REFRESH:\n- Add checkbox to enable/disable auto-refresh\n- Add dropdown with intervals: 30s, 60s, 120s\n- Default: 60 seconds\n- Automatically reloads schedule at selected interval\n- Shows toast notifications when enabled/disabled\n- Stops auto-refresh when leaving event page\n\nUI CONTROLS:\n- Checkbox in header: Auto-Refresh (off by default)\n- Dropdown (disabled when checkbox off): 30s / 60s / 120s\n- Styled to match existing header controls\n\nUSE CASE:\n- When Electron runs in background, schedule auto-updates\n- Sees duration changes, overtime updates, and all schedule modifications\n- No manual refresh needed\n- User controls refresh frequency based on needs\n\nUpdated both development and public (Netlify download) versions."
9ca9588 2025-10-20 \ Add overtime WebSocket handlers to Electron app for real-time sync\n\nELECTRON APP UPDATES:\n- Add handleOvertimeUpdate() to receive overtime changes from web UI\n- Add handleOvertimeReset() to receive reset events\n- Add overtime handlers to Socket.IO update listener\n- Reload schedule when overtime updates received\n- Show toast notifications for overtime changes\n- Enhanced logging for schedule update debugging\n\nFIXES:\n- Electron app now shows overtime values in real-time\n- Schedule changes from web UI auto-refresh in Electron\n- Overtime syncs bidirectionally (Electron  Web)\n- No manual refresh needed\n\nUpdated both:\n- ros-osc-control/src/renderer/app.js (development version)\n- public/electron-osc-app/src/renderer/app.js (Netlify download version)"
0af7fdc 2025-10-20 \ Fix timer duration default - Allow 0 duration without defaulting to 5 minutes\n\nBUG FIX:\n- Changed 'duration_seconds || 300' to 'duration_seconds ?? 300'\n- Now 0 is treated as a valid duration value\n- Only uses 300 (5 min) default when duration is null/undefined\n- Applied to all timer endpoints\n\nBEFORE: Duration of 0  Saved as 300 seconds (5 minutes)\nAFTER: Duration of 0  Saved as 0 seconds\n\nThis ensures timers with 0 duration work correctly and don't generate false overtime."
c81c3bd 2025-10-20 \ Move overtime calculation to API server - Now works with Electron/OSC\n\nCRITICAL UPDATE:\n- Added overtime calculation to PUT /api/active-timers/stop (web UI endpoint)\n- Added overtime calculation to POST /api/timers/stop (Electron/OSC endpoint)\n- Server now calculates overtime automatically on timer stop\n- Gets timer data before stopping to calculate actual vs scheduled duration\n- Saves overtime to overtime_minutes table with ON CONFLICT update\n- Broadcasts overtimeUpdate via WebSocket to all connected clients\n\nBENEFITS:\n- Overtime now works when timers stopped from Electron app\n- Overtime now works when timers stopped from OSC commands\n- Overtime now works from Netlify, localhost, AND Electron\n- Consistent overtime calculation regardless of client type\n- Frontend still calculates for immediate display (redundant save is harmless)\n\nThis ensures overtime tracking works across ALL client types."
ac5b088 2025-10-20 \ Remove Neon status monitoring - Cannot reliably detect regional outages\n\nCLEANUP:\n- Deleted neon-status-checker.ts service\n- Removed database status toast from RunOfShowPage\n- Removed monitoring useEffect and state variables\n- Reverted health check to simple connectivity test\n\nREASON:\n- Health checks pass even during Neon regional issues\n- Cannot distinguish between table missing vs regional outage\n- False positives/negatives make it unreliable\n- Users can see errors in console if there are actual issues\n\nKept only the essential time status toast for run-of-show timing."
4736ac4 2025-10-20 \ Add overtime reset functionality - Clear overtime data on event reset\n\nNEW FEATURES:\n- Add DELETE /api/overtime-minutes/:eventId endpoint to clear all overtime for event\n- Add DatabaseService.clearOvertimeMinutes() method\n- Call clearOvertimeMinutes() in resetAllStates() function\n- Add onOvertimeReset WebSocket listener to SocketCallbacks\n- Handle overtimeReset WebSocket event in RunOfShowPage\n- Broadcast overtimeReset to all clients when Reset button is clicked\n- Clear overtime state in onResetAllStates listener\n\nNow when Reset is clicked:\n- Overtime data is deleted from overtime_minutes table in Neon\n- All connected clients clear their overtime state via WebSocket\n- Overtime column values disappear immediately\n- Matches the behavior of completed cues reset"
8dac8e0 2025-10-20 \ Fix overtime loading - Handle string type from database\n\nCRITICAL FIX:\n- Neon is storing overtime_minutes as STRING instead of NUMBER\n- Frontend was filtering out all data due to type check\n- Now converts both string and number types using parseFloat\n- Validates with isNaN check before adding to overtimeData\n\nThis ensures overtime values display correctly after page refresh."
5e8f7c4 2025-10-20 \ Add detailed logging to overtime GET endpoint for debugging - Shows query, results, and item details"
ad8639e 2025-10-20  Enhance health check to detect missing database tables\n\nIMPROVED HEALTH CHECK:\n- Now tests database connectivity AND table existence\n- Checks for critical tables: run_of_show_data, completed_cues, overtime_minutes\n- Returns 'degraded' status if tables are missing (not just connectivity)\n- Returns response time for monitoring performance\n- Returns warnings array for specific issues\n\nSTATUS CHECKER ENHANCEMENT:\n- Updated neon-status-checker to parse health check JSON response\n- Detects 'degraded' status (missing tables) as unhealthy\n- Extracts specific error messages from health response\n- Falls back gracefully if JSON parsing fails\n\nNow the database status toast will appear if:\n- Neon connectivity fails (us-east-1 outage)\n- Critical database tables are missing\n- Any database configuration issues\n\nThis provides more accurate and actionable alerts for database issues.
f2506ed 2025-10-20  Add Neon database status monitoring and alert toast\n\nNEW FEATURES:\n- Created neon-status-checker.ts service to monitor database connectivity\n- Checks database health every 60 seconds via /health endpoin